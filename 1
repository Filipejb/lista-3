#include <stdio.h>
#include <stdlib.h>
#include <string.h>


struct Restaurante {
    char nome[100];
    char endereco[100];
    float preco;
    char Comida[100];
    struct Restaurante* prox;
};


void solicitarDadosRestaurante(struct Restaurante* restaurante) {
    printf("Digite o nome do restaurante: ");
    scanf("%s", restaurante->nome);

    printf("Digite o endereço : ");
    scanf("%s", restaurante->endereco);

    printf("Digite o preço médio : ");
    scanf("%f", &restaurante->preco);

    printf("Digite o tipo de comida : ");
    scanf("%s", restaurante->Comida);
}


void listarDadosRestaurantes(struct Restaurante* inicio) {
    struct Restaurante* atual = inicio;

    printf("Dados dos restaurantes:\n");

    while (atual != NULL) {
        printf("Restaurante: %s\n", atual->nome);
        printf("Endereço: %s\n", atual->endereco);
        printf("Preço médio: %.2f\n", atual->preco);
        printf("Tipo de comida: %s\n\n", atual->Comida);

        atual = atual->prox;
    }
}

int main() {
    struct Restaurante* inicio = NULL;
    struct Restaurante* novo = NULL;
    char adicionar;

    do {
       
        novo = (struct Restaurante*)malloc(sizeof(struct Restaurante));
        if (novo == NULL) {
            printf("Erro ao alocar memória.\n");
            return 1;
        }

        
        solicitarDadosRestaurante(novo);

        
        novo->prox = NULL;

        if (inicio == NULL) {
           
            inicio = novo;
        } else {
            
            struct Restaurante* atual = inicio;
            while (atual->prox != NULL) {
                atual = atual->prox;
            }
            atual->prox = novo;
        }

        printf("Deseja adicionar mais restaurantes? (s/n): ");
        scanf(" %c", &adicionar);
    } while (adicionar == 's' || adicionar == 'S');

    
    listarDadosRestaurantes(inicio);

    
    struct Restaurante* atual = inicio;
    while (atual != NULL) {
        struct Restaurante* proximo = atual->prox;
        free(atual);
        atual = proximo;
    }

    return 0;
}
